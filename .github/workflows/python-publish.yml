name: Run Workflow On Specific Word

on:
  push:
    branches:
      - new-ci-test

jobs:
  run_on_specific_word:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check Commit Message
        run: |
          # Extract the commit message from the last commit
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})

          # Check if the commit message contains a specific word
          if [[ $COMMIT_MESSAGE == *"build_docker"* ]]; then
            echo "Running workflow due to the specific word in the commit message."
          else
            echo "No specific word found in the commit message. Exiting workflow."
            exit 78  # Exit with a neutral exit code
          fi

          
      # - name: Run Your Workflow Steps
      #   run: |
      #     python -m pip install pyTermTk
      #     python -m pip install PyYAML
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}
          
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1
      
      # - name: Build and push
      #   id: build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/python_ci:fromkkryuu
      #   env:
      #     DOCKER_CLI_CONFIG: ${{ steps.buildx.outputs.config }}
      - name: List Docker Images
        run: docker images

      - name: Push to GitHub Container Registry (ghcr.io)
        run: |
          echo $GHCR_TOKEN | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker pull ${{ secrets.DOCKER_USERNAME }}/python_ci:civ3
          docker tag ${{ secrets.DOCKER_USERNAME }}/python_ci:civ3 ghcr.io/${{ github.repository_owner }}/python_ci:civ3
          docker push ghcr.io/${{ github.repository_owner }}/python_ci:civ3
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}

